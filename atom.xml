<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Gensokyo]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://chinuno-usami.github.io/"/>
  <updated>2015-04-04T13:08:38.010Z</updated>
  <id>http://chinuno-usami.github.io/</id>
  
  <author>
    <name><![CDATA[Chinuno Usami]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[坑爹的魅蓝note调试adb问题]]></title>
    <link href="http://chinuno-usami.github.io/2015/03/28/e5-9d-91-e7-88-b9-e7-9a-84-e9-ad-85-e8-93-9dnote-e8-b0-83-e8-af-95adb-e9-97-ae-e9-a2-98/"/>
    <id>http://chinuno-usami.github.io/2015/03/28/e5-9d-91-e7-88-b9-e7-9a-84-e9-ad-85-e8-93-9dnote-e8-b0-83-e8-af-95adb-e9-97-ae-e9-a2-98/</id>
    <published>2015-03-27T16:19:18.000Z</published>
    <updated>2015-04-04T13:08:38.010Z</updated>
    <content type="html"><![CDATA[<p>要用电脑调试魅蓝note做开发的时候遇到了很蛋疼的问题，连接之后adb死活找不到手机，手机自带了驱动和说明书，自带的驱动无法通过验证装不了，按照说明书的方法修改.Android下面的ini配置文件也没法解决。最后强制指定google自己的adb驱动后总算是解决了这坑爹问题。。<br>这驱动根本就没法安装你还丢手机你坑人做什么otl</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>要用电脑调试魅蓝note做开发的时候遇到了很蛋疼的问题，连接之后adb死活找不到手机，手机自带了驱动和说明书，自带的驱动无法通过验证装不了，按照说明书的方法修改.Android下面的ini配置文件也没法解决。最后强制指定google自己的adb驱动后总算是解决了这坑爹问题。]]>
    </summary>
    
      <category term="未分类" scheme="http://chinuno-usami.github.io/categories/%E6%9C%AA%E5%88%86%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[树莓派出问题了？！]]></title>
    <link href="http://chinuno-usami.github.io/2015/03/27/e6-a0-91-e8-8e-93-e6-b4-be-e5-87-ba-e9-97-ae-e9-a2-98-e4-ba-86-ef-bc-9f-ef-bc-81/"/>
    <id>http://chinuno-usami.github.io/2015/03/27/e6-a0-91-e8-8e-93-e6-b4-be-e5-87-ba-e9-97-ae-e9-a2-98-e4-ba-86-ef-bc-9f-ef-bc-81/</id>
    <published>2015-03-27T15:07:15.000Z</published>
    <updated>2015-04-04T13:08:38.010Z</updated>
    <content type="html"><![CDATA[<p>一直都在用树莓派跑着Archlinux当成服务器做一些自动化的事情，平时也确实帮了不少忙。因为有ddns所以就算在外面也能ssh连接到树莓派中进行操作。<br>已经好几个月没有滚过了昨天突然想要滚一下然后就用SP3连着树莓派让他自己滚去了，77个包更新过程非常久，把它放一边后自己睡着了。今天开了sp3才发现机子自动休眠了，已经中断的putty窗口上面的东西还没滚完。回到家后又Syu滚了一次。<br>然后蛋疼的事情来了，有个东西运行不太正常以为是机子的问题（（最后发现还是因为众所周知的原因【然后就reboot了。<br>这下好了启动后发现所有的服务都不能正常运行了，又想起好像上次滚的时候自己也没有重启过。<br>仔细看了看发现写操作都不能执行了，只能收到read-only file system的提示。<br>然后检查了下mount列表，所有的目录都是已经挂载了rw。。这下真蛋疼了，问题出在哪都不知道了<br>后来想想可能是fstab出问题了，所以想要找个原来的镜像来看看原来的fstab是怎样的。<br>之前的镜像包早就被删了，于是到官网去想要下载一个，竟然发现Archlinux的镜像早就被撤下来了<br>好吧，最后网上找了好久才找到一个14年的镜像。100+mb的zip包先下载下来了<br>自己的想法是hyper-v开个虚拟机，用把镜像传入虚拟机中挂载后查看fstab的内容<br>但是创建虚拟机后发现虚拟交换机根本就设置不了无法使用网络传输镜像了<br>最后想了个曲线的方法，创建个10G的vhd挂载到win8.1宿主机上，把镜像解压出img放到vhd虚拟硬盘中然后再挂到虚拟机上挂载<br>解压出来后1G+将近2G，不是很大w。mkdir /mnt/vhd创建挂载目录后mount /dev/sdb2 /mnt/vhd挂载上去（sda是虚拟机系统所在的磁盘，sdb是刚才的vhd磁盘，数据放在sdb2上<br>因为img是整个磁盘的镜像，/目录是在p5上面所以不能直接挂载<br>简单的方法，fdisk -lu blabla.img查看磁盘信息<br>Units = sectors of 1 * 512 = 512 bytes<br>单位大小为512字节<br>再乘上blabla.img5的Start算出位移<br>然后就可以挂载分区了<br>mkdir /mnt/archlinux_img<br>最后使用mount -o loop,offset=niconico /mnt/vhd/blabla.img /mnt/archlinux_img/<br>把分区挂载上去<br>vim /mnt/archlinux_img/etc/fstab查看内容后发现<br>里面的东西竟然是一样的！！！<br>最后只能暂时每次开机后都运行一次<br>mount -o remount,rw /来获取写入权限了（所以到底为什么remount后可以写入原来那样就不行？！！<br>然后蛋疼的还要每次都创建一个作为交换分区的文件挂到交换分区上去，这样以后没事还不能乱重启了，一来这些操作麻烦又费事，二来sd还经不起这样的折腾不知道什么时候就挂掉了。。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>一直都在用树莓派跑着Archlinux当成服务器做一些自动化的事情，平时也确实帮了不少忙。因为有ddns所以就算在外面也能ssh连接到树莓派中进行操作。<br>已经好几个月没有滚过了昨天突然想要滚一下然后就用SP3连着树莓派让他自己滚去了，77个包更新过程非常久，把它放一边]]>
    </summary>
    
      <category term="未分类" scheme="http://chinuno-usami.github.io/categories/%E6%9C%AA%E5%88%86%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[谷歌称CNNIC发布中间人攻击证书]]></title>
    <link href="http://chinuno-usami.github.io/2015/03/25/e8-b0-b7-e6-ad-8c-e7-a7-b0cnnic-e5-8f-91-e5-b8-83-e4-b8-ad-e9-97-b4-e4-ba-ba-e6-94-bb-e5-87-bb-e8-af-81-e4-b9-a6/"/>
    <id>http://chinuno-usami.github.io/2015/03/25/e8-b0-b7-e6-ad-8c-e7-a7-b0cnnic-e5-8f-91-e5-b8-83-e4-b8-ad-e9-97-b4-e4-ba-ba-e6-94-bb-e5-87-bb-e8-af-81-e4-b9-a6/</id>
    <published>2015-03-24T16:35:42.000Z</published>
    <updated>2015-04-04T13:08:38.010Z</updated>
    <content type="html"><![CDATA[<p><a href="http://www.williamlong.info/archives/4183.html" target="_blank" rel="external">http://www.williamlong.info/archives/4183.html</a><br>具体情况还是看上面链接吧。。<br>CNNIC做这种事又不是第一次了，要不然怎么早就有人要把CNNIC拉黑名单了。真是肮脏- =这种东西<br>该怎么做大家应该也都知道了吧，至于那些用CNNIC发的证书的【干净】的网站，打不开也无所谓了，反正都是些没什么价值的东西，活该你用CNNIC的证书</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://www.williamlong.info/archives/4183.html" target="_blank" rel="external">http://www.williamlong.info/archives/4183.html</a]]>
    </summary>
    
      <category term="未分类" scheme="http://chinuno-usami.github.io/categories/%E6%9C%AA%E5%88%86%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[surface pro中的hyper-v]]></title>
    <link href="http://chinuno-usami.github.io/2015/03/25/surface-pro-e4-b8-ad-e7-9a-84hyper-v/"/>
    <id>http://chinuno-usami.github.io/2015/03/25/surface-pro-e4-b8-ad-e7-9a-84hyper-v/</id>
    <published>2015-03-24T16:11:19.000Z</published>
    <updated>2015-04-04T13:08:38.010Z</updated>
    <content type="html"><![CDATA[<p>最近发现surface pro3在查看任务管理器的时候cpu频率总是显示为2.4Ghz，即使什么都不开也不会降下来。而以前刚入手的时候记得频率都降得很低的。<br>另外发现InstantGo功能竟然没了，只要一盖上键盘都直接休眠了，要按下电源键等待几秒才能再开。<br>后来才看到这篇文章<br><a href="http://winsupersite.com/mobile-devices/surface-pro-3-tip-hyper-v-vs-connected-standby" target="_blank" rel="external">http://winsupersite.com/mobile-devices/surface-pro-3-tip-hyper-v-vs-connected-standby</a><br>原来在开启了hyper-v后InstantGo就会被禁用，同时surface的电源管理多出来原来没有的节能和高性能两个设置<br>关于cpu频率的问题网上说的是hyper-v和Intel的一些软件有兼容性问题，看来之前android的x86虚拟机提示cpu不支持虚拟化也极有可能是因为hyper-v产生的。如果不是特别需要的话果然还是把它关掉比较好，微软在开发wp应用的时候也要求打开hyper-v才可以。如果是开发wp应用这样不得不用的话那也没什么办法可以解决了。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近发现surface pro3在查看任务管理器的时候cpu频率总是显示为2.4Ghz，即使什么都不开也不会降下来。而以前刚入手的时候记得频率都降得很低的。<br>另外发现InstantGo功能竟然没了，只要一盖上键盘都直接休眠了，要按下电源键等待几秒才能再开。<br>后来]]>
    </summary>
    
      <category term="未分类" scheme="http://chinuno-usami.github.io/categories/%E6%9C%AA%E5%88%86%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Linux内核代码风格]]></title>
    <link href="http://chinuno-usami.github.io/2015/03/22/linux-e5-86-85-e6-a0-b8-e4-bb-a3-e7-a0-81-e9-a3-8e-e6-a0-bc/"/>
    <id>http://chinuno-usami.github.io/2015/03/22/linux-e5-86-85-e6-a0-b8-e4-bb-a3-e7-a0-81-e9-a3-8e-e6-a0-bc/</id>
    <published>2015-03-21T18:41:02.000Z</published>
    <updated>2015-04-04T16:56:06.200Z</updated>
    <content type="html"><![CDATA[<p>这学期有个Linux驱动开发的课程，所以看了Linux内核源代码中的Documentation中关于代码风格的部分<br>发现关于缩进他说的是缩进使用八个字符，不能用空格缩进<br>其中还有一句是这么说的：有些异端运动试图将缩进变为4（乃至2）个字符深，这几乎相当于尝试将圆周率的值定义为3。<br>其实自己平时都喜欢用空格四个字符来进行缩进的= =!<br>vi默认的制表符就是8个字符不知道是制表符原来就是这样定义的还是说后面的编辑器因为4字符的缩进习惯流行起来而进行的改变<br>现在让我看8字符的缩进真是特别难受了【【之前看google的代码都是两个空格缩进的感觉也是otl</p>
<p>关于大括号的时候，个人是习惯于左括号放在行尾右括号都放在行首单独一行，看到文档中的描述我又深深的觉得蛋要碎了。。<br>一般情况下所有的非函数语句块（if、switch、for、while、do）。跟我平时的习惯一样，但是函数就要使用左括号另开一行的方式。。说好的代码风格统一呢！给出的理由也真是强词夺理的感觉<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> (action) &#123; </span><br><span class="line"><span class="keyword">case</span> KOBJ_ADD: </span><br><span class="line">	<span class="keyword">return</span> <span class="string">"add"</span>; </span><br><span class="line"><span class="keyword">case</span> KOBJ_REMOVE: </span><br><span class="line">	<span class="keyword">return</span> <span class="string">"remove"</span>; </span><br><span class="line"><span class="keyword">case</span> KOBJ_CHANGE: </span><br><span class="line">	<span class="keyword">return</span> <span class="string">"change"</span>; </span><br><span class="line"><span class="keyword">default</span>: </span><br><span class="line">	<span class="keyword">return</span> NULL; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">function</span><span class="params">(<span class="keyword">int</span> x)</span> </span><br><span class="line"></span>&#123; </span><br><span class="line">	body of function </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>额。上面的代码其实缩进是8字符的制表符，因为代码高亮插件所以显示成4个空格<br>语句剩余的部分还要紧接在右括号后面，放在typedef或者do-while里面上感觉蛮正常的，但是像这样<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (x == y) &#123; </span><br><span class="line">		.. </span><br><span class="line">	&#125; <span class="keyword">else</span> <span class="keyword">if</span> (x &gt; y) &#123; </span><br><span class="line">		... </span><br><span class="line">	&#125; <span class="keyword">else</span> &#123; </span><br><span class="line">		.... </span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure></p>
<p>真的就觉得怪异了，到现在基本上还没见过有人用这样的风格写if-else的。。</p>
<p>在命名方面倒是看到了这么一句话：在函数名中包含函数类型（所谓的匈牙利命名法）是脑子出了问题——编译器知道那些类型而且能够检查那些类型，这样做只能把程序员弄糊涂了。难怪微软总是制造出有问题的程序。<br>嗯。先不管匈牙利命名法本意是什么，微软本身使用的时候就已经产生误解错误的使用了，这样的命名方式看起来用起来真的都特别累人，做windows下面的游戏开发已经看的太多这样的东西了otl估计这句话也就是整篇文档自己唯一能赞同的一句了吧</p>
<p>Linux的注释风格一律使用C89标准的/* …*/不知道是不是为了和以前的代码统一风格<br>而在微软的代码中看到的则是C99标准提倡的//注释</p>
<p>同样属GNU阵营的emacs都在文档里面被喷说格式化出来的都是他们之前说的异端，还要修改设置改成k&amp;r要求的格式<br>就连专门为k&amp;r格式开出一个选项的indent不也是默认4字符缩进嘛，要8字符缩进还要另外加参数ヽ(｀⌒´)ノ<br>为Linux的代码统一一个规范风格是很好，但是做到这种程度感觉真是神经病了</p>
<p>额。虽然Kernighan和Ritchie写了The C Programming Language哪里都能看到对这本书的称赞，但是感觉这东西并不能表示k&amp;r风格就是最好的blabla。<br>相信很多人学C也都是看这书来学的，自然就按照他们的风格来了。想想看国内多少看谭浩强的书学的C，绝大多数人码出来的代码还都是void main(){}这样的东西【说起来有的人说是因为当时谭浩强用的是旧标准所以才会有这样的东西，不过C99的确要求main()函数的返回值是int，但是c89也没有void main()这样的东西，最多也就main()这样而已。又不是说用在单片机或者什么特殊用途的地方才有void的main,况且那些编译器都还是特殊的编译器故意这样设计的。国内学校好像对标准这东西也不怎么重视，现在不还是一大片一大片的教科书都是void main()么，连用的IDE都还是TC或者VC6这样连C99标准都不支持的老古董。</p>
<p>他们写的书好坏是一回事。自己想说的是每个人刚开始接触的时候学到的是什么就认为该是怎么样，极力推崇或者有特别的好感，然后又去安利别人所以才。。。相信现在也不会有人喜欢匈牙利命名法吧，不过现在还有那么多人用这种方式写代码也是受了微软【MFC之类的。】的影响，一开始接触的是windows开发就觉得理所应当就是这种样子的。国外不还有某大牛14岁开始学了PHP后来大学CS课程学C的时候还一直困惑变量怎么可能不加$的么。</p>
<p>晚安。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>这学期有个Linux驱动开发的课程，所以看了Linux内核源代码中的Documentation中关于代码风格的部分<br>发现关于缩进他说的是缩进使用八个字符，不能用空格缩进<br>其中还有一句是这么说的：有些异端运动试图将缩进变为4（乃至2）个字符深，这几乎相当于尝试将圆]]>
    </summary>
    
      <category term="未分类" scheme="http://chinuno-usami.github.io/categories/%E6%9C%AA%E5%88%86%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[最近的新想法]]></title>
    <link href="http://chinuno-usami.github.io/2015/03/22/e6-9c-80-e8-bf-91-e7-9a-84-e6-96-b0-e6-83-b3-e6-b3-95/"/>
    <id>http://chinuno-usami.github.io/2015/03/22/e6-9c-80-e8-bf-91-e7-9a-84-e6-96-b0-e6-83-b3-e6-b3-95/</id>
    <published>2015-03-21T17:06:26.000Z</published>
    <updated>2015-04-04T13:08:38.000Z</updated>
    <content type="html"><![CDATA[<p>最近想要研究一下android系統，打算從源代碼編譯一下android，大概看了看編譯方法。<br>他的要求是需要在64bit版本的Linux或者OS X上面才能進行編譯<br>看了看手頭的機子，老電腦雖然跑著ubuntu但是cpu不支援64bit<br>Surface Pro3存儲空間太小不夠用，使用虛擬機一個編譯效率也低，所以也不能考慮了<br>剩下的只有宿舍的電腦了，本身用著openSUSE也是64bit的Linux系統，在環境搭建方面比起ubuntu麻煩點，剩餘的存儲空間也不知道夠不夠用，下個星期如果還記得的話看看能不能用咯</p>
<p>上次說過用於樹莓派的交叉編譯環境可能要坑了「「「。<br>因為發現了其他好像能解決這個問題的方法不需要再交叉編譯了<br>本身的想法是從源代碼開始自己配置編譯個個交叉環境的，看來暫時沒機會了「「「連自己都不信以後這坑能填上</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近想要研究一下android系統，打算從源代碼編譯一下android，大概看了看編譯方法。<br>他的要求是需要在64bit版本的Linux或者OS X上面才能進行編譯<br>看了看手頭的機子，老電腦雖然跑著ubuntu但是cpu不支援64bit<br>Surface P]]>
    </summary>
    
      <category term="未分类" scheme="http://chinuno-usami.github.io/categories/%E6%9C%AA%E5%88%86%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[VS2013利用宏添加函数注释]]></title>
    <link href="http://chinuno-usami.github.io/2015/03/18/vs2013-e5-88-a9-e7-94-a8-e5-ae-8f-e6-b7-bb-e5-8a-a0-e5-87-bd-e6-95-b0-e6-b3-a8-e9-87-8a/"/>
    <id>http://chinuno-usami.github.io/2015/03/18/vs2013-e5-88-a9-e7-94-a8-e5-ae-8f-e6-b7-bb-e5-8a-a0-e5-87-bd-e6-95-b0-e6-b3-a8-e9-87-8a/</id>
    <published>2015-03-18T11:00:10.000Z</published>
    <updated>2015-04-04T19:15:37.960Z</updated>
    <content type="html"><![CDATA[<p>使用vs2013码代码的时候觉得添加函数注释太麻烦所以就想说利用vs的宏功能来实现函数注释的添加<br>然后发现微软在vs2013去掉了宏的功能，但是还是可以用插件添加回去<br><a href="https://visualstudiogallery.msdn.microsoft.com/d3fbf133-e51b-41a2-b86f-9560a96ff62b" target="_blank" rel="external">Macros for Visual Studio 2013 </a><br>添加后发现宏不再是使用vb来写了，变成了javascript</p>
<h1 id="Features"><strong>Features</strong></h1><ul>
<li>Record and playback active document operations and Visual Studio IDE commands</li>
<li>Playback multiple times</li>
<li>Manage and persist macros with a Macro Explorer</li>
<li>Assign keyboard bindings to any macro</li>
<li><strong>Macros recorded as JavaScript files that call VS DTE APIs</strong></li>
<li>Macro editing in Visual Studio with DTE IntelliSense</li>
<li>Stop playback</li>
<li>Sample macros</li>
</ul>
<p>新建如下的宏<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Macro.InsertText(<span class="string">"//-----------------------------------【()函数】--------------------------------------"</span>);</span><br><span class="line">dte.ActiveDocument.Selection.NewLine();</span><br><span class="line">Macro.InsertText(<span class="string">"//	描述   ："</span>);</span><br><span class="line">dte.ActiveDocument.Selection.NewLine();</span><br><span class="line">Macro.InsertText(<span class="string">"//	参数   ："</span>);</span><br><span class="line">dte.ActiveDocument.Selection.NewLine();</span><br><span class="line">Macro.InsertText(<span class="string">"//	返回值 ："</span>);</span><br><span class="line">dte.ActiveDocument.Selection.NewLine();</span><br><span class="line">Macro.InsertText(<span class="string">"//	作者   ：Chinuno Usami"</span>);</span><br><span class="line">dte.ActiveDocument.Selection.NewLine();</span><br><span class="line">Macro.InsertText(<span class="string">"//	创建日期："</span>);</span><br><span class="line"><span class="keyword">var</span> dat = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">Macro.InsertText(dat.getDate().toString() + <span class="string">'/'</span> + dat.getMonth().toString() + <span class="string">'/'</span> + dat.getYear().toString());</span><br><span class="line">dte.ActiveDocument.Selection.NewLine();</span><br><span class="line">Macro.InsertText(<span class="string">"//----------------------------------------------------------------------------------------"</span>);</span><br></pre></td></tr></table></figure></p>
<p>执行后的效果是这样<br><img src="http://ww1.sinaimg.cn/large/4ec84d23gw1eqa38f3pklj21hc0tednt.jpg" alt=""><br>添加ctrl+m,1的快捷键就能快速添加了。<br>最后的效果大概是这样的<br><img src="http://ww3.sinaimg.cn/large/4ec84d23gw1eqa3hfpyzbj20sp09s40s.jpg" alt=""><br><img src="http://ww4.sinaimg.cn/large/4ec84d23gw1eqa3i3imraj20f304rdgl.jpg" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>使用vs2013码代码的时候觉得添加函数注释太麻烦所以就想说利用vs的宏功能来实现函数注释的添加<br>然后发现微软在vs2013去掉了宏的功能，但是还是可以用插件添加回去<br><a href="https://visualstudiogallery.msdn.micro]]>
    </summary>
    
      <category term="未分类" scheme="http://chinuno-usami.github.io/categories/%E6%9C%AA%E5%88%86%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[随便写点什么]]></title>
    <link href="http://chinuno-usami.github.io/2015/03/11/e9-9a-8f-e4-be-bf-e5-86-99-e7-82-b9-e4-bb-80-e4-b9-88/"/>
    <id>http://chinuno-usami.github.io/2015/03/11/e9-9a-8f-e4-be-bf-e5-86-99-e7-82-b9-e4-bb-80-e4-b9-88/</id>
    <published>2015-03-11T15:32:25.000Z</published>
    <updated>2015-04-04T13:08:38.000Z</updated>
    <content type="html"><![CDATA[<p>这学期开了Android开发的课。以前没开过的课教材用的外面随便买的一本Android开发xx天速成。。内容都好几年前的了- =真是一点营养也没有</p>
<p>搞个android开发环境，由于众所周知的原因- =整个过程真是生不如死，原来一直很有用的镜像服务器都不能用了，唯一能用的镜像只能下到x86的android系统镜像。surface pro3应该是支持VT-X的虚拟化的在其他虚拟机都能用，在任务管理器也看到虚拟化已经打开了但是HAXM就是装不上总是提示机子不支持虚拟化- =然后只能很无解的每次都接上NEXUS7实机调试了，，，</p>
<ul>
<li>=还有那啥。V2EX被墙了= -看着百毒那抓得满满的V2EX页面没有一个能开的= -真棒，你说说你国还有救？还想发展强大？吃翔去吧</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>这学期开了Android开发的课。以前没开过的课教材用的外面随便买的一本Android开发xx天速成。。内容都好几年前的了- =真是一点营养也没有</p>
<p>搞个android开发环境，由于众所周知的原因- =整个过程真是生不如死，原来一直很有用的镜像服务器都不能用了，]]>
    </summary>
    
      <category term="未分类" scheme="http://chinuno-usami.github.io/categories/%E6%9C%AA%E5%88%86%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[分享大觸]]></title>
    <link href="http://chinuno-usami.github.io/2015/03/06/e5-88-86-e4-ba-ab-e5-a4-a7-e8-a7-b8/"/>
    <id>http://chinuno-usami.github.io/2015/03/06/e5-88-86-e4-ba-ab-e5-a4-a7-e8-a7-b8/</id>
    <published>2015-03-05T16:53:25.000Z</published>
    <updated>2015-04-04T13:08:38.000Z</updated>
    <content type="html"><![CDATA[<p>在b站看到了這麼個視頻</p>
<embed height="452" width="544" quality="high" allowfullscreen="true" type="application/x-shockwave-flash" src="http://share.acg.tv/flash.swf" flashvars="aid=2062604&page=1" pluginspage="http://www.adobe.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash">

<p><a href="http://space.bilibili.com/637653" target="_blank" rel="external">http://space.bilibili.com/637653</a> ←up的b站空間</p>
<p>雖然說自己也是學嵌入式的但是這方面確實不太懂，最多也就編編程，對於那些彙編代碼機器碼什麼的也只是看得懂而已，電子部分╮(╯_╰)╭自己實在無解，更別說焊板子之類的東西了，看都沒看過。</p>
<p>對自己不會的東西充滿憧憬之心本身不就是這樣的生物嘛，看到那個做觸盤的視頻後覺得自己也想試試看做個什麼東西，正好還有個樹莓派，雖然說在硬件擴展方面還是比不上Arduino不過能做的事情應該還是很多的。現在的問題是➀.自己都不知道想要做什麼(ˉ▽ˉ；)。➁.想要入手些什麼零件都特別困難，想想還是洗洗碎了吧「「「。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>在b站看到了這麼個視頻</p>
<embed height="452" width="544" quality="high" allowfullscreen="true" type="application/x-shockwave-flash" src="http://sh]]>
    </summary>
    
      <category term="未分类" scheme="http://chinuno-usami.github.io/categories/%E6%9C%AA%E5%88%86%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[搭建arm交叉編譯環境Part.1]]></title>
    <link href="http://chinuno-usami.github.io/2015/03/04/e6-90-ad-e5-bb-baarm-e4-ba-a4-e5-8f-89-e7-b7-a8-e8-ad-af-e7-92-b0-e5-a2-83part-1/"/>
    <id>http://chinuno-usami.github.io/2015/03/04/e6-90-ad-e5-bb-baarm-e4-ba-a4-e5-8f-89-e7-b7-a8-e8-ad-af-e7-92-b0-e5-a2-83part-1/</id>
    <published>2015-03-04T10:03:39.000Z</published>
    <updated>2015-04-04T13:08:38.000Z</updated>
    <content type="html"><![CDATA[<p>要搭建arm處理器的linux交叉編譯環境首先需要有個linux的host環境，環境是搭建在我的surface上面，因為是跑的win8.1所以要搭建環境可以使用cygwin進行環境的搭建，不過因為cygwin畢竟不是原生的linux環境怕會出些不好解決的問題，所以打算用win8自帶的虛擬機hyper-v裝個archlinux作為交叉編譯的系統平臺，然後使用ssh連接過去進行操作。archlinux可以除去不需要的東西做到最小化的編譯環境搭建。</p>
<p>首先到archlinux的官網從163的鏡像下載了最新的archlinux安裝鏡像archlinux-2015.03.01-dual.iso</p>
<p>啟用hyper-v並且重啟後hyper-v虛擬機就可以用了，在hyper-v管理器中新建虛擬交換機用於虛擬機跟外界的網路連接，然後新建archlinux的虛擬機<br><img src="http://ww3.sinaimg.cn/large/4ec84d23gw1eptnvihf4aj20iq0hytcd.jpg" alt=""></p>
<p>啟動虛擬機進行系統的安裝</p>
<p><img src="http://ww2.sinaimg.cn/large/4ec84d23gw1eptuldez6fj20ut0m1aga.jpg" alt=""></p>
<p>安裝完系統裝上必要的網路服務工具和openssh就能ssh到archlinux進行操作了，archlinux使用systemctl就能添加系統服務開機運行了還是很方便的。</p>
<p>archlinux的安裝花的時間不長，但是需要仔細一點，中間漏了某一步可能就需要重來了，最好還是跟著官方wiki上的步驟來做，在安裝環境的/root/下面也有一份簡易的安裝步驟。</p>
<p>這一p就先到這裡吧，更新下一p的時候再繼續後面的步驟。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>要搭建arm處理器的linux交叉編譯環境首先需要有個linux的host環境，環境是搭建在我的surface上面，因為是跑的win8.1所以要搭建環境可以使用cygwin進行環境的搭建，不過因為cygwin畢竟不是原生的linux環境怕會出些不好解決的問題，所以打算用wi]]>
    </summary>
    
      <category term="未分类" scheme="http://chinuno-usami.github.io/categories/%E6%9C%AA%E5%88%86%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[入手極路由]]></title>
    <link href="http://chinuno-usami.github.io/2015/03/04/e5-85-a5-e6-89-8b-e6-a5-b5-e8-b7-af-e7-94-b1/"/>
    <id>http://chinuno-usami.github.io/2015/03/04/e5-85-a5-e6-89-8b-e6-a5-b5-e8-b7-af-e7-94-b1/</id>
    <published>2015-03-04T05:31:21.000Z</published>
    <updated>2015-04-04T13:08:38.000Z</updated>
    <content type="html"><![CDATA[<p>現在手上的設備大部分都能用5G的wifi了，加上學校在使用的路由器在自動設置路由表有些問題早就想換了所以入了個極路由。開箱後是這樣的 <img src="http://ww3.sinaimg.cn/large/4ec84d23gw1eptm8trsjqj219c0pidqa.jpg" alt=""></p>
<p>之前網上看人說電源特別大，實際到手之後感覺還行，不算大的。</p>
<p>在初始配置後能夠上網了<br><img src="http://ww3.sinaimg.cn/large/4ec84d23gw1eptmfobzeqj20kr0hgdju.jpg" alt=""></p>
<p>surface使用802.11ac連接，在學校宿舍各種干擾使用5g頻段還是很有必要的。</p>
<p>極路由的後臺界面挺美的，使用起來應該說還是很方便的，內置了幾大上網認證功能，所以才打算在學校使用極路由。</p>
<p>極路由宣傳的一個亮點是擴展插件，實際上那些插件除了標配的ddns，端口轉發其他都是用不上的，數量也不算多「話說之前貼吧看到過的ss插件怎麼沒有，難道要日更版才有？」</p>
<p>大約看了看極路由系統的信息之後發現。。這極路由的系統其實就是個openwrt。。。不過極路由團隊進行了web界面的美化加入了點遠程操作的功能，對於不太喜歡搞七搞八的人來說還是很方便的，現在智能手機的系統大部分不還是android自己改的嘛「「「</p>
<p>極路由的信號設置默認強的情況下隔著兩堵牆大約十米範圍2.4g頻段信號跟我原來使用的TPLINK路由器差不多，5G頻段信號只有一格，表現還行。</p>
<p>剛到手還不能看出有什麼問題，以後如果出現了網上人說的連接不穩定之類的再在這裡更新吧。</p>
<p>&nbsp;</p>
<p>————————————————————————————————————</p>
<p>2015年3月8日更新。今天是把極路由帶到學校的第一天，結果在配置路由器的時候發生了蛋疼的事情。路由器通電之後過了大約三分鐘才開始亮燈能連wifi，然後過了大約兩分鐘才能進得去後臺。然後突然後臺進不去了w(ﾟДﾟ)w！！把手頭四臺設備全都試了一遍都進不去我蛋疼了，，重啟之後又是漫長的等待，還是沒能進去。。最後把它放置play蠻長一段時間後重新啟動路由器，忐忑的等了五分鐘終於能夠進去了。。當時整個人都要炸了。。。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>現在手上的設備大部分都能用5G的wifi了，加上學校在使用的路由器在自動設置路由表有些問題早就想換了所以入了個極路由。開箱後是這樣的 <img src="http://ww3.sinaimg.cn/large/4ec84d23gw1eptm8trsjqj219c0pidqa]]>
    </summary>
    
      <category term="未分类" scheme="http://chinuno-usami.github.io/categories/%E6%9C%AA%E5%88%86%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[明天的计划]]></title>
    <link href="http://chinuno-usami.github.io/2015/03/04/e6-98-8e-e5-a4-a9-e7-9a-84-e8-ae-a1-e5-88-92/"/>
    <id>http://chinuno-usami.github.io/2015/03/04/e6-98-8e-e5-a4-a9-e7-9a-84-e8-ae-a1-e5-88-92/</id>
    <published>2015-03-03T16:01:08.000Z</published>
    <updated>2015-04-04T13:08:38.000Z</updated>
    <content type="html"><![CDATA[<p>为了编译树莓派上面运行的程序明天或许会搭建一个交叉编译环境。</p>
<p>用archlinux做server真是作死了。。好几个月没滚今天滚下看看还能不能活得成。</p>
<p>————————————————</p>
<p>成功滚完，这次更新的东西真多。暂时还没发现什么异常，就怕下次重启之后挂掉otl</p>
<p>晚安。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>为了编译树莓派上面运行的程序明天或许会搭建一个交叉编译环境。</p>
<p>用archlinux做server真是作死了。。好几个月没滚今天滚下看看还能不能活得成。</p>
<p>————————————————</p>
<p>成功滚完，这次更新的东西真多。暂时还没发现什么]]>
    </summary>
    
      <category term="未分类" scheme="http://chinuno-usami.github.io/categories/%E6%9C%AA%E5%88%86%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[博客搬迁]]></title>
    <link href="http://chinuno-usami.github.io/2015/03/02/e5-8d-9a-e5-ae-a2-e6-90-ac-e8-bf-81/"/>
    <id>http://chinuno-usami.github.io/2015/03/02/e5-8d-9a-e5-ae-a2-e6-90-ac-e8-bf-81/</id>
    <published>2015-03-02T12:58:20.000Z</published>
    <updated>2015-04-04T13:08:37.990Z</updated>
    <content type="html"><![CDATA[<p>今天博客搬迁，顺便换了个域名。</p>
<p>为了装逼学了ComboPinyin打字。这篇日志也是用ComboPinyin码出来的。</p>
<p>十秒码一个字- -!</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>今天博客搬迁，顺便换了个域名。</p>
<p>为了装逼学了ComboPinyin打字。这篇日志也是用ComboPinyin码出来的。</p>
<p>十秒码一个字- -!</p>
]]>
    </summary>
    
      <category term="未分类" scheme="http://chinuno-usami.github.io/categories/%E6%9C%AA%E5%88%86%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Qpython执行需要root权限的脚本]]></title>
    <link href="http://chinuno-usami.github.io/2015/02/28/qpython-e6-89-a7-e8-a1-8c-e9-9c-80-e8-a6-81root-e6-9d-83-e9-99-90-e7-9a-84-e8-84-9a-e6-9c-ac/"/>
    <id>http://chinuno-usami.github.io/2015/02/28/qpython-e6-89-a7-e8-a1-8c-e9-9c-80-e8-a6-81root-e6-9d-83-e9-99-90-e7-9a-84-e8-84-9a-e6-9c-ac/</id>
    <published>2015-02-27T19:28:42.000Z</published>
    <updated>2015-04-04T13:08:38.000Z</updated>
    <content type="html"><![CDATA[<p>既然这里搭好了就发篇文章吧</p>
<p>在更新到android5.0之后SL4A已经不能使用了，一执行脚本就会黑掉然后崩掉。Qpython原本也是会出问题的后来很快更新了新版本已经解决了5.0的问题了，倒是SL4A一直都没有更新的动作于是现在都用Qpython来运行python脚本了。<br>之前写了个脚本用来进行自动更新某个app的配置，因此需要修改app目录下的配置文件，但是执行配置文件修改的操作需要获得root权限，因为是在Qpython中运行的脚本因此是无法获得root权限的，在shell中搭建好python环境后直接在模拟终端sudo运行应该是可以的不过操作实在是太繁琐了。后来看到配置文件中有个指定配置文件目录的字段，尝试修改了一下发现app照样读取原来目录下的配置文件，修改了config_file字段的路径一点作用也没有，于是到github上找了项目开源的代码来看了下，发现原来配置文件的路径都已经在源码中写死了otl。。给出了config_file的字段其实是个没用的接口(?<br>既然路径是写死的那么就只能修改源码重新编译才能达到修改配置文件目录到不需root权限就能修改的路径去了。<br>修改代码重新编译实在是麻烦（其实还是懒<br>所以最后还是通过最懒的方法解决了这个问题。。直接用adb shell给su到root然后把配置文件权限配置为777这样就算不用取得root权限仍然可以达到修改配置文件的目的<br>不知道还有什么办法能达到这样的目的，当然最希望的是Qpython以后能够加入以root权限运行脚本的功能。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>既然这里搭好了就发篇文章吧</p>
<p>在更新到android5.0之后SL4A已经不能使用了，一执行脚本就会黑掉然后崩掉。Qpython原本也是会出问题的后来很快更新了新版本已经解决了5.0的问题了，倒是SL4A一直都没有更新的动作于是现在都用Qpython来运行pyt]]>
    </summary>
    
      <category term="未分类" scheme="http://chinuno-usami.github.io/categories/%E6%9C%AA%E5%88%86%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[新的技术博客]]></title>
    <link href="http://chinuno-usami.github.io/2015/02/28/e6-96-b0-e7-9a-84-e6-8a-80-e6-9c-af-e5-8d-9a-e5-ae-a2/"/>
    <id>http://chinuno-usami.github.io/2015/02/28/e6-96-b0-e7-9a-84-e6-8a-80-e6-9c-af-e5-8d-9a-e5-ae-a2/</id>
    <published>2015-02-27T19:06:21.000Z</published>
    <updated>2015-04-04T13:08:37.990Z</updated>
    <content type="html"><![CDATA[<p>把原来的东西打包丢给屌泽后终于可以把这里拿来自己用了。<br>于是现在就打算用这里来做自己的第N个技术博客，希望还能坚持下去xd<br>因为之前其实也建了好几个了但是因为各种原因没有一个是坚持写下去的<br>原本是打算简简单单的用github的介绍页面来做的，后来也觉得麻烦<br>也想过在heroku上面直接用python做一个的，不过最后想想<br>这里有个域名还有CDN加速不用也是浪费，而且wordpress主题也多，搭建也方便（主要还是懒（（<br>说起来ftp的管理方式真心蛋疼，把之前的东西都删掉还要遍历目录一个一个去删太浪费时间了<br>上传的话也不能直接压缩包丢上去部署只能一个一个传。。<br>有关原来那个网站的事情请去找屌泽吧（笑</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>把原来的东西打包丢给屌泽后终于可以把这里拿来自己用了。<br>于是现在就打算用这里来做自己的第N个技术博客，希望还能坚持下去xd<br>因为之前其实也建了好几个了但是因为各种原因没有一个是坚持写下去的<br>原本是打算简简单单的用github的介绍页面来做的，后来也觉得麻烦]]>
    </summary>
    
      <category term="未分类" scheme="http://chinuno-usami.github.io/categories/%E6%9C%AA%E5%88%86%E7%B1%BB/"/>
    
  </entry>
  
</feed>